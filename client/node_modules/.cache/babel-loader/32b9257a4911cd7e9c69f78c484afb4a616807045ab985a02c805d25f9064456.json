{"ast":null,"code":"export default {\n  name: \"AddressForm\",\n  components: {},\n  data() {\n    return {\n      name: null,\n      email: null,\n      line1: null,\n      line2: null,\n      zipCode: null,\n      city: null,\n      division: null,\n      country: null,\n      formatNumber: /^[0-9+-]+$/,\n      formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\n    };\n  },\n  computed: {\n    nameValidation() {\n      if (this.name == null) return null;else if (this.name.length == 0) return false;else return true;\n    },\n    emailValidation() {\n      if (this.email == null) return null;\n      return this.formatEmail.test(this.email);\n    },\n    line1Validation() {\n      if (this.line1 == null) return null;else if (this.line1.length == 0) return false;else return true;\n    },\n    line2Validation() {\n      if (this.line2 == null) return null;else if (this.line2.length == 0) return false;else return true;\n    },\n    zipCodeValidation() {\n      if (this.zipCode == null) return null;else if (this.zipCode.length == 0) return false;else return true;\n    },\n    cityValidation() {\n      if (this.city == null) return null;else if (this.city.length == 0) return false;else return true;\n    },\n    divisionValidation() {\n      if (this.division == null) return null;else if (this.division.length == 0) return false;else return true;\n    },\n    countryValidation() {\n      if (this.country == null) return null;else if (this.country.length == 0) return false;else return true;\n    }\n  },\n  async mounted() {\n    await this.$store.dispatch(\"Checkout/resetCustomerDetails\");\n    const user = this.$store.state.CurrentUser.user;\n    if (Object.keys(user).length != 0) {\n      this.name = user.firstName + \" \" + user.lastName;\n      this.email = user.email;\n      this.setName();\n      this.setEmail();\n    }\n  },\n  methods: {\n    setName() {\n      this.$store.dispatch(\"Checkout/setCustomerName\", this.name);\n    },\n    setEmail() {\n      this.$store.dispatch(\"Checkout/setCustomerEmail\", this.email);\n    },\n    setAddressLine1() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressLine1\", this.line1);\n    },\n    setAddressLine2() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressLine2\", this.line2);\n    },\n    setAddressZipCode() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressZipCode\", this.zipCode);\n    },\n    setAddressCity() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCity\", this.city);\n    },\n    setAddressDivision() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressDivision\", this.division);\n    },\n    setAddressCountry() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCountry\", this.country);\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","email","line1","line2","zipCode","city","division","country","formatNumber","formatEmail","computed","nameValidation","length","emailValidation","test","line1Validation","line2Validation","zipCodeValidation","cityValidation","divisionValidation","countryValidation","mounted","$store","dispatch","user","state","CurrentUser","Object","keys","firstName","lastName","setName","setEmail","methods","setAddressLine1","setAddressLine2","setAddressZipCode","setAddressCity","setAddressDivision","setAddressCountry"],"sources":["src/components/Checkout/AddressForm.vue"],"sourcesContent":["<template>\n  <div>\n    <b-row>\n      <b-col>\n        <b-form>\n          <h5 class=\"font-weight-bold\">Personal Details</h5>\n          <hr />\n          <b-form-group\n            id=\"input-group-name\"\n            label=\"Name\"\n            label-for=\"input-name\"\n          >\n            <b-form-input\n              v-model=\"name\"\n              id=\"input-name\"\n              type=\"text\"\n              @change=\"setName\"\n              :state=\"nameValidation\"\n              required\n            />\n          </b-form-group>\n          <b-form-group\n            id=\"input-group-email\"\n            label=\"Email\"\n            label-for=\"input-email\"\n          >\n            <b-form-input\n              v-model=\"email\"\n              id=\"input-email\"\n              type=\"email\"\n              @change=\"setEmail\"\n              :state=\"emailValidation\"\n              required\n            />\n          </b-form-group>\n          <div class=\"mt-4\">\n            <b-card bg-variant=\"light\">\n              <b-form-group\n                label-cols-lg=\"3\"\n                label=\"Shipping Address\"\n                label-size=\"lg\"\n                label-class=\"font-weight-bold pt-0\"\n                class=\"mb-0\"\n              >\n                <b-form-group\n                  label=\"Line1:\"\n                  label-for=\"nested-line1\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"line1Validation\"\n                    required\n                    v-model=\"line1\"\n                    @change=\"setAddressLine1\"\n                    id=\"nested-line1\"\n                  />\n                </b-form-group>\n                <b-form-group\n                  label=\"Line2:\"\n                  label-for=\"nested-line2\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"line2Validation\"\n                    required\n                    v-model=\"line2\"\n                    @change=\"setAddressLine2\"\n                    id=\"nested-line2\"\n                  />\n                </b-form-group>\n\n                <b-form-group\n                  label=\"Zip Code:\"\n                  label-for=\"nested-zipcode\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"zipCodeValidation\"\n                    required\n                    v-model=\"zipCode\"\n                    @change=\"setAddressZipCode\"\n                    id=\"nested-zipcode\"\n                  />\n                </b-form-group>\n\n                <b-form-group\n                  label=\"City:\"\n                  label-for=\"nested-city\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"cityValidation\"\n                    required\n                    v-model=\"city\"\n                    @change=\"setAddressCity\"\n                    id=\"nested-city\"\n                  />\n                </b-form-group>\n                <b-form-group\n                  label=\"Division:\"\n                  label-for=\"nested-division\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"divisionValidation\"\n                    required\n                    v-model=\"division\"\n                    @change=\"setAddressDivision\"\n                    id=\"nested-division\"\n                  />\n                </b-form-group>\n\n                <b-form-group\n                  class=\"mb-0\"\n                  label=\"Country:\"\n                  label-for=\"nested-country\"\n                  label-cols-sm=\"3\"\n                  label-align-sm=\"right\"\n                >\n                  <b-form-input\n                    :state=\"countryValidation\"\n                    required\n                    v-model=\"country\"\n                    @change=\"setAddressCountry\"\n                    id=\"nested-country\"\n                  />\n                </b-form-group>\n              </b-form-group>\n            </b-card>\n          </div>\n        </b-form>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AddressForm\",\n  components: {},\n  data() {\n    return {\n      name: null,\n      email: null,\n      line1: null,\n      line2: null,\n      zipCode: null,\n      city: null,\n      division: null,\n      country: null,\n      formatNumber: /^[0-9+-]+$/,\n      formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n    };\n  },\n  computed: {\n    nameValidation() {\n      if (this.name == null) return null;\n      else if (this.name.length == 0) return false;\n      else return true;\n    },\n    emailValidation() {\n      if (this.email == null) return null;\n      return this.formatEmail.test(this.email);\n    },\n   \n    line1Validation() {\n      if (this.line1 == null) return null;\n      else if (this.line1.length == 0) return false;\n      else return true;\n    },\n    line2Validation() {\n      if (this.line2 == null) return null;\n      else if (this.line2.length == 0) return false;\n      else return true;\n    },\n    zipCodeValidation() {\n      if (this.zipCode == null) return null;\n      else if (this.zipCode.length == 0) return false;\n      else return true;\n    },\n    cityValidation() {\n      if (this.city == null) return null;\n      else if (this.city.length == 0) return false;\n      else return true;\n    },\n    divisionValidation() {\n      if (this.division == null) return null;\n      else if (this.division.length == 0) return false;\n      else return true;\n    },\n    countryValidation() {\n      if (this.country == null) return null;\n      else if (this.country.length == 0) return false;\n      else return true;\n    },\n  },\n  async mounted() {\n    await this.$store.dispatch(\"Checkout/resetCustomerDetails\");\n    const user = this.$store.state.CurrentUser.user;\n    if (Object.keys(user).length != 0) {\n      this.name = user.firstName + \" \" + user.lastName;\n      this.email = user.email;\n      this.setName();\n      this.setEmail();\n    }\n  },\n  methods: {\n    setName() {\n      this.$store.dispatch(\"Checkout/setCustomerName\", this.name);\n    },\n    setEmail() {\n      this.$store.dispatch(\"Checkout/setCustomerEmail\", this.email);\n    },\n    setAddressLine1() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressLine1\", this.line1);\n    },\n    setAddressLine2() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressLine2\", this.line2);\n    },\n    setAddressZipCode() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressZipCode\", this.zipCode);\n    },\n    setAddressCity() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCity\", this.city);\n    },\n    setAddressDivision() {\n      this.$store.dispatch(\n        \"Checkout/setCustomerAddressDivision\",\n        this.division\n      );\n    },\n    setAddressCountry() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCountry\", this.country);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":"AA8IA;EACAA,IAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAF,IAAA;MACAG,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,OAAA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAC,YAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,SAAAb,IAAA,2BACA,SAAAA,IAAA,CAAAc,MAAA,yBACA;IACA;IACAC,gBAAA;MACA,SAAAZ,KAAA;MACA,YAAAQ,WAAA,CAAAK,IAAA,MAAAb,KAAA;IACA;IAEAc,gBAAA;MACA,SAAAb,KAAA,2BACA,SAAAA,KAAA,CAAAU,MAAA,yBACA;IACA;IACAI,gBAAA;MACA,SAAAb,KAAA,2BACA,SAAAA,KAAA,CAAAS,MAAA,yBACA;IACA;IACAK,kBAAA;MACA,SAAAb,OAAA,2BACA,SAAAA,OAAA,CAAAQ,MAAA,yBACA;IACA;IACAM,eAAA;MACA,SAAAb,IAAA,2BACA,SAAAA,IAAA,CAAAO,MAAA,yBACA;IACA;IACAO,mBAAA;MACA,SAAAb,QAAA,2BACA,SAAAA,QAAA,CAAAM,MAAA,yBACA;IACA;IACAQ,kBAAA;MACA,SAAAb,OAAA,2BACA,SAAAA,OAAA,CAAAK,MAAA,yBACA;IACA;EACA;EACA,MAAAS,QAAA;IACA,WAAAC,MAAA,CAAAC,QAAA;IACA,MAAAC,IAAA,QAAAF,MAAA,CAAAG,KAAA,CAAAC,WAAA,CAAAF,IAAA;IACA,IAAAG,MAAA,CAAAC,IAAA,CAAAJ,IAAA,EAAAZ,MAAA;MACA,KAAAd,IAAA,GAAA0B,IAAA,CAAAK,SAAA,SAAAL,IAAA,CAAAM,QAAA;MACA,KAAA7B,KAAA,GAAAuB,IAAA,CAAAvB,KAAA;MACA,KAAA8B,OAAA;MACA,KAAAC,QAAA;IACA;EACA;EACAC,OAAA;IACAF,QAAA;MACA,KAAAT,MAAA,CAAAC,QAAA,kCAAAzB,IAAA;IACA;IACAkC,SAAA;MACA,KAAAV,MAAA,CAAAC,QAAA,mCAAAtB,KAAA;IACA;IACAiC,gBAAA;MACA,KAAAZ,MAAA,CAAAC,QAAA,0CAAArB,KAAA;IACA;IACAiC,gBAAA;MACA,KAAAb,MAAA,CAAAC,QAAA,0CAAApB,KAAA;IACA;IACAiC,kBAAA;MACA,KAAAd,MAAA,CAAAC,QAAA,4CAAAnB,OAAA;IACA;IACAiC,eAAA;MACA,KAAAf,MAAA,CAAAC,QAAA,yCAAAlB,IAAA;IACA;IACAiC,mBAAA;MACA,KAAAhB,MAAA,CAAAC,QAAA,CACA,uCACA,KAAAjB,QACA;IACA;IACAiC,kBAAA;MACA,KAAAjB,MAAA,CAAAC,QAAA,4CAAAhB,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}