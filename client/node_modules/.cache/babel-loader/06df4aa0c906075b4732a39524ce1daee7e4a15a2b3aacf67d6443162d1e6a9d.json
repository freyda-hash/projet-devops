{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TopHeader from \"@/components/Common/TopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport AuthenticationService from \"@/services/AuthenticationService.js\";\nexport default {\n  name: \"ResetPassword\",\n  components: {\n    TopHeader,\n    MyFooter\n  },\n  data() {\n    return {\n      userId: null,\n      emailResetPassword: null,\n      mailSent: false,\n      name: null,\n      email: null,\n      newPassword: null,\n      formatPassword: /^[a-zA-z0-9]{8,32}$/,\n      confirmPassword: null,\n      tokenValidate: true\n    };\n  },\n  computed: {\n    newPasswordValidation() {\n      if (this.newPassword == null) return null;else if (!this.formatPassword.test(this.newPassword)) return false;else return true;\n    },\n    confirmPasswordValidation() {\n      if (this.confirmPassword == null) return null;else if (this.confirmPassword != this.newPassword || !this.formatPassword.test(this.confirmPassword)) return false;else return true;\n    }\n  },\n  async mounted() {\n    const token = this.$route.params.token;\n    try {\n      const user = (await AuthenticationService.verifyPasswordToken(token)).data;\n      this.userId = user.id;\n      this.name = user.firstName + \" \" + user.lastName;\n      this.email = user.email;\n    } catch (error) {\n      this.tokenValidate = false;\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    async passwordReset() {\n      if (!this.newPasswordValidation || !this.confirmPasswordValidation) return;\n      try {\n        await AuthenticationService.resetPassword({\n          id: this.userId,\n          email: this.email,\n          name: this.name,\n          password: this.newPassword\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      try {\n        const response = await AuthenticationService.login({\n          email: this.email,\n          password: this.newPassword\n        });\n        this.$store.dispatch(\"CurrentUser/setToken\", response.data.token);\n        this.$store.dispatch(\"CurrentUser/setUser\", response.data.user);\n        this.$router.push({\n          path: \"/\"\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["TopHeader","MyFooter","AuthenticationService","name","components","data","userId","emailResetPassword","mailSent","email","newPassword","formatPassword","confirmPassword","tokenValidate","computed","newPasswordValidation","test","confirmPasswordValidation","mounted","token","$route","params","user","verifyPasswordToken","id","firstName","lastName","error","console","log","response","methods","passwordReset","resetPassword","password","login","$store","dispatch","$router","push","path"],"sources":["src/views/User/ResetPassword.vue"],"sourcesContent":["<template>\n  <div>\n    <TopHeader />\n    <b-container class=\"mt-5\">\n      <b-row class=\"ml-5\">\n        <b-col cols=\"10\" md=\"8\" lg=\"6\">\n          <b-card v-if=\"!tokenValidate\">\n            <h5 class=\"text-center\"><strong>Reset your password</strong></h5>\n            <b-alert class=\"mt-4\" variant=\"warning\" show>\n              <small>\n                It looks like you clicked on an invalid password reset link.\n                <br />\n                <b-link to=\"/login\">\n                  Login here\n                  <b-icon icon=\"arrow-right\" />\n                </b-link>\n              </small>\n            </b-alert>\n          </b-card>\n\n          <b-card v-if=\"tokenValidate\" style=\"color: #001e5f\">\n            <h4 class=\"font-weight-bold\">Change password for {{ email }}</h4>\n            <b-form @submit.stop.prevent=\"passwordReset\" class=\"mt-4\">\n              <b-form-group\n                class=\"font-weight-bold\"\n                id=\"input-group-password\"\n                label=\"New password\"\n                label-for=\"input-password\"\n              >\n                <b-form-input\n                  v-model=\"newPassword\"\n                  id=\"input-password\"\n                  type=\"password\"\n                  required\n                  :state=\"newPasswordValidation\"\n                />\n                <b-form-invalid-feedback\n                  v-if=\"newPassword\"\n                  :state=\"newPasswordValidation\"\n                >\n                  Your password could be 8-32 character long, contain letters,\n                  numbers and must not contain space.\n                </b-form-invalid-feedback>\n              </b-form-group>\n\n              <b-form-group\n                class=\"font-weight-bold\"\n                id=\"input-group-2-password\"\n                label=\"Confirm password\"\n                label-for=\"input-2-password\"\n              >\n                <b-form-input\n                  v-model=\"confirmPassword\"\n                  id=\"input-2-password\"\n                  type=\"password\"\n                  required\n                  :state=\"confirmPasswordValidation\"\n                />\n                <b-form-invalid-feedback\n                  v-if=\"confirmPassword\"\n                  :state=\"confirmPasswordValidation\"\n                >\n                  Password didn't match\n                </b-form-invalid-feedback>\n              </b-form-group>\n              <b-row>\n                <b-col cols=\"6\">\n                  <b-button\n                    class=\"p-2 mt-2 font-weight-bold\"\n                    block\n                    type=\"submit\"\n                    variant=\"warning\"\n                  >\n                    Submit\n                  </b-button>\n                </b-col>\n              </b-row>\n            </b-form>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-container>\n    <MyFooter class=\"mt-5\" />\n  </div>\n</template>\n\n<script>\nimport TopHeader from \"@/components/Common/TopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport AuthenticationService from \"@/services/AuthenticationService.js\";\nexport default {\n  name: \"ResetPassword\",\n  components: {\n    TopHeader,\n    MyFooter,\n  },\n  data() {\n    return {\n      userId: null,\n      emailResetPassword: null,\n      mailSent: false,\n      name: null,\n      email: null,\n      newPassword: null,\n      formatPassword: /^[a-zA-z0-9]{8,32}$/,\n      confirmPassword: null,\n      tokenValidate: true,\n    };\n  },\n  computed: {\n    newPasswordValidation() {\n      if (this.newPassword == null) return null;\n      else if (!this.formatPassword.test(this.newPassword)) return false;\n      else return true;\n    },\n    confirmPasswordValidation() {\n      if (this.confirmPassword == null) return null;\n      else if (\n        this.confirmPassword != this.newPassword ||\n        !this.formatPassword.test(this.confirmPassword)\n      )\n        return false;\n      else return true;\n    },\n  },\n  async mounted() {\n    const token = this.$route.params.token;\n    try {\n      const user = (await AuthenticationService.verifyPasswordToken(token))\n        .data;\n      this.userId = user.id;\n      this.name = user.firstName + \" \" + user.lastName;\n      this.email = user.email;\n    } catch (error) {\n      this.tokenValidate = false;\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    async passwordReset() {\n      if (!this.newPasswordValidation || !this.confirmPasswordValidation)\n        return;\n      try {\n        await AuthenticationService.resetPassword({\n          id: this.userId,\n          email: this.email,\n          name: this.name,\n          password: this.newPassword,\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      try {\n        const response = await AuthenticationService.login({\n          email: this.email,\n          password: this.newPassword,\n        });\n        this.$store.dispatch(\"CurrentUser/setToken\", response.data.token);\n        this.$store.dispatch(\"CurrentUser/setUser\", response.data.user);\n        this.$router.push({ path: \"/\" });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n#layoutAuthentication_footer {\n  margin-top: 120px;\n}\n.error {\n  color: red;\n}\n.abbr:hover,\n.abbr:active {\n  color: #4caf50;\n  color: #19689c;\n}\n.abbr:active,\n.abbr:hover {\n  outline-width: 0;\n}\n.logo {\n  font-family: fontawesome;\n  text-decoration: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 30px;\n  letter-spacing: 3px;\n  color: #000000;\n  display: block;\n  top: 17px;\n}\n// a {\n//     color: inherit;\n// }\n.abbr {\n  background-color: transparent;\n}\n#layoutAuthentication {\n  background-color: rgb(255, 255, 255);\n}\n</style>\n"],"mappings":";AAuFA,OAAAA,SAAA;AACA,OAAAC,QAAA;AACA,OAAAC,qBAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAJ,SAAA;IACAC;EACA;EACAI,KAAA;IACA;MACAC,MAAA;MACAC,kBAAA;MACAC,QAAA;MACAL,IAAA;MACAM,KAAA;MACAC,WAAA;MACAC,cAAA;MACAC,eAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACAC,sBAAA;MACA,SAAAL,WAAA,2BACA,UAAAC,cAAA,CAAAK,IAAA,MAAAN,WAAA,qBACA;IACA;IACAO,0BAAA;MACA,SAAAL,eAAA,2BACA,IACA,KAAAA,eAAA,SAAAF,WAAA,IACA,MAAAC,cAAA,CAAAK,IAAA,MAAAJ,eAAA,GAEA,kBACA;IACA;EACA;EACA,MAAAM,QAAA;IACA,MAAAC,KAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,KAAA;IACA;MACA,MAAAG,IAAA,UAAApB,qBAAA,CAAAqB,mBAAA,CAAAJ,KAAA,GACAd,IAAA;MACA,KAAAC,MAAA,GAAAgB,IAAA,CAAAE,EAAA;MACA,KAAArB,IAAA,GAAAmB,IAAA,CAAAG,SAAA,SAAAH,IAAA,CAAAI,QAAA;MACA,KAAAjB,KAAA,GAAAa,IAAA,CAAAb,KAAA;IACA,SAAAkB,KAAA;MACA,KAAAd,aAAA;MACAe,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAzB,IAAA,CAAAsB,KAAA;IACA;EACA;EACAI,OAAA;IACA,MAAAC,cAAA;MACA,UAAAjB,qBAAA,UAAAE,yBAAA,EACA;MACA;QACA,MAAAf,qBAAA,CAAA+B,aAAA;UACAT,EAAA,OAAAlB,MAAA;UACAG,KAAA,OAAAA,KAAA;UACAN,IAAA,OAAAA,IAAA;UACA+B,QAAA,OAAAxB;QACA;MACA,SAAAiB,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAzB,IAAA,CAAAsB,KAAA;MACA;MACA;QACA,MAAAG,QAAA,SAAA5B,qBAAA,CAAAiC,KAAA;UACA1B,KAAA,OAAAA,KAAA;UACAyB,QAAA,OAAAxB;QACA;QACA,KAAA0B,MAAA,CAAAC,QAAA,yBAAAP,QAAA,CAAAzB,IAAA,CAAAc,KAAA;QACA,KAAAiB,MAAA,CAAAC,QAAA,wBAAAP,QAAA,CAAAzB,IAAA,CAAAiB,IAAA;QACA,KAAAgB,OAAA,CAAAC,IAAA;UAAAC,IAAA;QAAA;MACA,SAAAb,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAzB,IAAA,CAAAsB,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}