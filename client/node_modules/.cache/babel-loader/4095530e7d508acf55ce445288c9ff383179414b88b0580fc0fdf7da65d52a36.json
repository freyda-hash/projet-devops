{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport ProductsService from \"@/services/ProductsService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport { VueEditor } from \"vue2-editor\";\nexport default {\n  name: \"AddProduct\",\n  components: {\n    ATopHeader,\n    VueEditor,\n    MyFooter\n  },\n  data() {\n    return {\n      images: [],\n      productSubTitleMessage: \"Add product overview text.\",\n      productSubTitleAlert: false,\n      productDescriptionMessage: \"Add proper description for this product.\",\n      productDescriptionAlert: false,\n      backupProduct: null,\n      product: {\n        code: \"\",\n        title: \"\",\n        amount: null,\n        sales: 0,\n        subtitle: \"\",\n        rating: 0,\n        peopleRated: 0,\n        description: \"\",\n        currency: \"USD\"\n      },\n      errorCountImage: \"You are not allowed to add more than 10 image for any product.\",\n      maximumImageCount: 10,\n      imageAlert: false,\n      dispImg: []\n    };\n  },\n  computed: {},\n  async mounted() {\n    this.backupProduct = this.product;\n  },\n  methods: {\n    resetProduct() {\n      this.product = this.backupProduct;\n    },\n    async createNewProduct() {\n      if (this.product.subtitle == \"\") {\n        this.productSubTitleAlert = true;\n        return;\n      } else if (this.product.description == \"\") {\n        this.productSubTitleAlert = false;\n        this.productDescriptionAlert = true;\n        return;\n      }\n      this.product.subtitle = this.product.subtitle.replace(/<p><br><\\/p>/g, \"\");\n      this.product.description = this.product.description.replace(/<p><br><\\/p>/g, \"\");\n      var formData = new FormData();\n      var fieldName;\n      for (fieldName in this.product) {\n        formData.append(fieldName, this.product[fieldName]);\n      }\n      var i;\n      for (i = 0; i < this.images.length; i++) {\n        if (i < this.maximumImageCount) formData.append(\"imageField\", this.images[i]);\n      }\n      try {\n        const newProduct = (await ProductsService.createProduct(formData)).data;\n        await this.$store.dispatch(\"Products/setAllBackupProducts\");\n        this.$router.push({\n          path: `/product/${newProduct.id}`\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n    selectedImage(event) {\n      this.images = event.target.files;\n      if (this.images.length > this.maximumImageCount) {\n        this.imageAlert = true;\n      } else {\n        this.imageAlert = false;\n      }\n      var i;\n      this.dispImg = [];\n      for (i = 0; i < this.images.length; i++) {\n        if (i < this.maximumImageCount) {\n          this.dispImg[i] = URL.createObjectURL(this.images[i]);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductsService","ATopHeader","MyFooter","VueEditor","name","components","data","images","productSubTitleMessage","productSubTitleAlert","productDescriptionMessage","productDescriptionAlert","backupProduct","product","code","title","amount","sales","subtitle","rating","peopleRated","description","currency","errorCountImage","maximumImageCount","imageAlert","dispImg","computed","mounted","methods","resetProduct","createNewProduct","replace","formData","FormData","fieldName","append","i","length","newProduct","createProduct","$store","dispatch","$router","push","path","id","error","console","log","response","selectedImage","event","target","files","URL","createObjectURL"],"sources":["src/views/Admin/AddProduct.vue"],"sourcesContent":["<template>\n  <div>\n    <ATopHeader />\n\n    <b-container class=\"mt-4\">\n      <b-card>\n        <b-navbar text-variant=\"white\" variant=\"info\">\n          <b-navbar-brand style=\"color: #fff\">Add Product</b-navbar-brand>\n        </b-navbar>\n        <b-form\n          @reset=\"resetProduct\"\n          @submit.stop.prevent=\"createNewProduct\"\n          class=\"mt-3\"\n        >\n          <b-row cols=\"1\" cols-md=\"2\">\n            <b-col>\n              <b-form-group\n                id=\"input-group-title\"\n                label=\"Product Title\"\n                label-for=\"input-title\"\n              >\n                <b-form-input\n                  id=\"input-title\"\n                  v-model=\"product.title\"\n                  placeholder=\"Enter Product Name\"\n                  required\n                />\n              </b-form-group>\n              <b-row>\n                <b-col>\n                  <b-form-group\n                    id=\"input-group-amount\"\n                    label=\"Price\"\n                    label-for=\"input-amount\"\n                  >\n                    <b-form-input\n                      id=\"input-amount\"\n                      v-model=\"product.amount\"\n                      placeholder=\"Price\"\n                      required\n                    />\n                  </b-form-group>\n                </b-col>\n                <b-col>\n                  <b-form-group\n                    id=\"input-group-currency\"\n                    label=\"Currency\"\n                    label-for=\"input-currency\"\n                  >\n                    <b-form-input\n                      id=\"input-currency\"\n                      v-model=\"product.currency\"\n                      readonly\n                      required\n                    />\n                  </b-form-group>\n                </b-col>\n              </b-row>\n              <div>\n                <b-form-group\n                  id=\"input-group-overview\"\n                  label=\"Overview\"\n                  label-for=\"input-overview\"\n                >\n                  <vue-editor\n                    @keyup=\"\n                      productSubTitleAlert ? (productSubTitleAlert = false) : 1\n                    \"\n                    required\n                    id=\"input-overview\"\n                    v-model=\"product.subtitle\"\n                  >\n                  </vue-editor>\n                </b-form-group>\n              </div>\n            </b-col>\n            <b-col>\n             \n              <b-form-group\n                id=\"input-group-images\"\n                label=\"Product Images\"\n                label-for=\"input-images\"\n              >\n                <b-form-file\n                  id=\"input-images\"\n                  placeholder=\"Upto 10 image\"\n                  required\n                  multiple\n                  @change=\"selectedImage\"\n                />\n              </b-form-group>\n              <b-alert variant=\"warning\" class=\"mt-2\" :show=\"imageAlert\">\n                {{ errorCountImage }}\n              </b-alert>\n              <div id=\"preview\">\n                <b-row class=\"mt-2\">\n                  <b-col cols=\"3\" v-for=\"(img, index) in dispImg\" :key=\"index\">\n                    {{ index + 1 }}\n                    <b-img :src=\"img\" width=\"100%\" />\n                  </b-col>\n                </b-row>\n              </div>\n            </b-col>\n          </b-row>\n          <hr />\n          <b-row>\n            <b-col>\n              <div>\n                <b-form-group\n                  id=\"input-group-description\"\n                  label=\"Description\"\n                  label-for=\"input-description\"\n                >\n                  <vue-editor\n                    @keyup=\"\n                      productDescriptionAlert\n                        ? (productDescriptionAlert = false)\n                        : 1\n                    \"\n                    required\n                    id=\"input-description\"\n                    v-model=\"product.description\"\n                  >\n                  </vue-editor>\n                </b-form-group>\n              </div>\n            </b-col>\n          </b-row>\n         \n          <b-alert variant=\"warning\" :show=\"productSubTitleAlert\">\n            {{ productSubTitleMessage }}\n          </b-alert>\n          <b-alert variant=\"warning\" :show=\"productDescriptionAlert\">\n            {{ productDescriptionMessage }}\n          </b-alert>\n\n          <b-row>\n            <b-col cols=\"7\"></b-col>\n            <b-col cols=\"5\">\n              <b-row>\n                <b-col>\n                  <b-button type=\"reset\" variant=\"danger\" block>Reset</b-button>\n                </b-col>\n                <b-col>\n                  <b-button variant=\"primary\" block type=\"submit\">\n                    Submit\n                  </b-button>\n                </b-col>\n              </b-row>\n            </b-col>\n          </b-row>\n        </b-form>\n      </b-card>\n    </b-container>\n    <MyFooter class=\"mt-5\" />\n  </div>\n</template>\n\n<script>\nimport ProductsService from \"@/services/ProductsService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport { VueEditor } from \"vue2-editor\";\nexport default {\n  name: \"AddProduct\",\n  components: {\n    ATopHeader,\n    VueEditor,\n    MyFooter,\n  },\n  data() {\n    return {\n      images: [],\n      productSubTitleMessage: \"Add product overview text.\",\n      productSubTitleAlert: false,\n      productDescriptionMessage: \"Add proper description for this product.\",\n      productDescriptionAlert: false,\n      backupProduct: null,\n      product: {\n        code: \"\",\n        title: \"\",\n        amount: null,\n        sales: 0,\n        subtitle: \"\",\n        rating: 0,\n        peopleRated: 0,\n        description: \"\",\n        currency: \"USD\",\n      },\n      errorCountImage:\n        \"You are not allowed to add more than 10 image for any product.\",\n      maximumImageCount: 10,\n      imageAlert: false,\n      dispImg: [],\n    };\n  },\n  computed: {},\n  async mounted() {\n    this.backupProduct = this.product;\n  },\n  methods: {\n    resetProduct() {\n      this.product = this.backupProduct;\n    },\n    async createNewProduct() {\n      \n       if (this.product.subtitle == \"\") {\n        this.productSubTitleAlert = true;\n        return;\n      } else if (this.product.description == \"\") {\n        this.productSubTitleAlert = false;\n        this.productDescriptionAlert = true;\n        return;\n      }\n      this.product.subtitle = this.product.subtitle.replace(\n        /<p><br><\\/p>/g,\n        \"\"\n      );\n      this.product.description = this.product.description.replace(\n        /<p><br><\\/p>/g,\n        \"\"\n      );\n      var formData = new FormData();\n      var fieldName;\n      for (fieldName in this.product) {\n        formData.append(fieldName, this.product[fieldName]);\n      }\n      var i;\n      for (i = 0; i < this.images.length; i++) {\n        if (i < this.maximumImageCount)\n          formData.append(\"imageField\", this.images[i]);\n      }\n      try {\n        const newProduct = (await ProductsService.createProduct(formData)).data;\n        await this.$store.dispatch(\"Products/setAllBackupProducts\");\n        this.$router.push({ path: `/product/${newProduct.id}` });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n  \n    selectedImage(event) {\n      this.images = event.target.files;\n\n      if (this.images.length > this.maximumImageCount) {\n        this.imageAlert = true;\n      } else {\n        this.imageAlert = false;\n      }\n      var i;\n\n      this.dispImg = [];\n      for (i = 0; i < this.images.length; i++) {\n        if (i < this.maximumImageCount) {\n          this.dispImg[i] = URL.createObjectURL(this.images[i]);\n        }\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":";;;;AA+JA,OAAAA,eAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AACA,SAAAC,SAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAJ,UAAA;IACAE,SAAA;IACAD;EACA;EACAI,KAAA;IACA;MACAC,MAAA;MACAC,sBAAA;MACAC,oBAAA;MACAC,yBAAA;MACAC,uBAAA;MACAC,aAAA;MACAC,OAAA;QACAC,IAAA;QACAC,KAAA;QACAC,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;QACAC,WAAA;QACAC,WAAA;QACAC,QAAA;MACA;MACAC,eAAA,EACA;MACAC,iBAAA;MACAC,UAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;EACA,MAAAC,QAAA;IACA,KAAAhB,aAAA,QAAAC,OAAA;EACA;EACAgB,OAAA;IACAC,aAAA;MACA,KAAAjB,OAAA,QAAAD,aAAA;IACA;IACA,MAAAmB,iBAAA;MAEA,SAAAlB,OAAA,CAAAK,QAAA;QACA,KAAAT,oBAAA;QACA;MACA,gBAAAI,OAAA,CAAAQ,WAAA;QACA,KAAAZ,oBAAA;QACA,KAAAE,uBAAA;QACA;MACA;MACA,KAAAE,OAAA,CAAAK,QAAA,QAAAL,OAAA,CAAAK,QAAA,CAAAc,OAAA,CACA,iBACA,EACA;MACA,KAAAnB,OAAA,CAAAQ,WAAA,QAAAR,OAAA,CAAAQ,WAAA,CAAAW,OAAA,CACA,iBACA,EACA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACA,IAAAC,SAAA;MACA,KAAAA,SAAA,SAAAtB,OAAA;QACAoB,QAAA,CAAAG,MAAA,CAAAD,SAAA,OAAAtB,OAAA,CAAAsB,SAAA;MACA;MACA,IAAAE,CAAA;MACA,KAAAA,CAAA,MAAAA,CAAA,QAAA9B,MAAA,CAAA+B,MAAA,EAAAD,CAAA;QACA,IAAAA,CAAA,QAAAb,iBAAA,EACAS,QAAA,CAAAG,MAAA,oBAAA7B,MAAA,CAAA8B,CAAA;MACA;MACA;QACA,MAAAE,UAAA,UAAAvC,eAAA,CAAAwC,aAAA,CAAAP,QAAA,GAAA3B,IAAA;QACA,WAAAmC,MAAA,CAAAC,QAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAC,IAAA,cAAAN,UAAA,CAAAO,EAAA;QAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAA5C,IAAA,CAAAyC,KAAA;MACA;IACA;IAEAI,cAAAC,KAAA;MACA,KAAA7C,MAAA,GAAA6C,KAAA,CAAAC,MAAA,CAAAC,KAAA;MAEA,SAAA/C,MAAA,CAAA+B,MAAA,QAAAd,iBAAA;QACA,KAAAC,UAAA;MACA;QACA,KAAAA,UAAA;MACA;MACA,IAAAY,CAAA;MAEA,KAAAX,OAAA;MACA,KAAAW,CAAA,MAAAA,CAAA,QAAA9B,MAAA,CAAA+B,MAAA,EAAAD,CAAA;QACA,IAAAA,CAAA,QAAAb,iBAAA;UACA,KAAAE,OAAA,CAAAW,CAAA,IAAAkB,GAAA,CAAAC,eAAA,MAAAjD,MAAA,CAAA8B,CAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}