{"ast":null,"code":"import ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport UserService from \"@/services/UserService.js\";\nimport ReviewService from \"@/services/ReviewService.js\";\nexport default {\n  name: \"AUsers\",\n  components: {\n    ATopHeader\n  },\n  data() {\n    return {\n      anyType: {\n        name: \"All\"\n      },\n      userId: 0,\n      selectedTypeName: \"All\",\n      selectedTypeVariant: \"dark\",\n      searchUserText: \"\",\n      users: 1,\n      secondUserList: [],\n      userList: [],\n      userList2: [],\n      userStatus: [{\n        name: \"Admin\",\n        priority: 1,\n        description: \"Owner of this system.\"\n      }, {\n        name: \"Customer\",\n        priority: 2,\n        description: \"End user of the system.\"\n      }],\n      currentPage: 1,\n      perPage: 20\n    };\n  },\n  computed: {},\n  async mounted() {\n    try {\n      this.userId = this.$store.state.CurrentUser.userId;\n      this.userList = (await UserService.getUserList()).data;\n      this.userList2 = this.userList.slice();\n      if (this.userList2) {\n        this.users = this.userList2.length;\n        const start = 0;\n        this.secondUserList = this.userList2.slice(start, start + this.perPage);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    search() {\n      if (this.selectedTypeName != \"All\") {\n        this.userList2 = this.userList2.filter(val => {\n          return val.userType.toLowerCase().includes(this.selectedTypeName.toLowerCase());\n        });\n      }\n      this.userList2 = this.userList2.filter(val => {\n        return val.firstName.toLowerCase().includes(this.searchUserText.toLowerCase()) || val.lastName.toLowerCase().includes(this.searchUserText.toLowerCase()) || val.email.toLowerCase().includes(this.searchUserText.toLowerCase());\n      });\n      this.users = this.userList2.length;\n      const start = 0;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    },\n    selectType(status) {\n      if (status.name == \"All\") {\n        this.searchUserText = \"\";\n        this.selectedTypeName = status.name;\n        this.userList2 = this.userList.slice();\n      } else {\n        this.selectedTypeName = status.name;\n        this.userList2 = this.userList.filter(obj => obj.userType == status.name);\n      }\n      this.users = this.userList2.length;\n      const start = 0;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    },\n    async updateStatus(user, status) {\n      const index = this.secondUserList.findIndex(obj => obj.id === user.id);\n      this.secondUserList[index].userType = status.name;\n      await UserService.updateUser({\n        id: user.id,\n        userType: status.name,\n        priority: status.priority\n      });\n    },\n    async deleteAccount(user) {\n      var reviewList = [];\n      try {\n        reviewList = (await ReviewService.getUsersReviewList(user.id)).data;\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      var i;\n      for (i in reviewList) {\n        await this.$store.dispatch(\"Review/deleteReview\", reviewList[i]);\n      }\n      try {\n        await UserService.deleteAccount(user.id);\n        window.location.reload();\n      } catch (error) {\n        this.$bvToast.toast(error.response.data.error, {\n          title: \"Error deleting Account\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true\n        });\n        console.log(error.response.data.error);\n      }\n    },\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    }\n  }\n};","map":{"version":3,"names":["ATopHeader","UserService","ReviewService","name","components","data","anyType","userId","selectedTypeName","selectedTypeVariant","searchUserText","users","secondUserList","userList","userList2","userStatus","priority","description","currentPage","perPage","computed","mounted","$store","state","CurrentUser","getUserList","slice","length","start","error","console","log","response","methods","search","filter","val","userType","toLowerCase","includes","firstName","lastName","email","selectType","status","obj","updateStatus","user","index","findIndex","id","updateUser","deleteAccount","reviewList","getUsersReviewList","i","dispatch","window","location","reload","$bvToast","toast","title","toaster","noCloseButton","solid","paginate"],"sources":["src/views/Admin/AUsers.vue"],"sourcesContent":["<template>\n  <div>\n    <ATopHeader/>\n    <b-container class=\"mt-2\">\n      <b-row>\n        <b-col class=\"text-center\">\n          <h3>Users</h3>\n        </b-col>\n      </b-row>\n      <hr />\n      <b-row>\n        <b-col>\n          <b-row>\n            <b-col cols=\"8\" />\n            <b-col cols=\"4\">\n              <b-form inline @submit.prevent=\"search\">\n                <b-form-input\n                  v-model=\"searchUserText\"\n                  size=\"\"\n                  class=\"mr-sm-2\"\n                  placeholder=\"Search user...\"\n                  @keyup.enter=\"search\"\n                />\n                <b-button @click=\"search\" variant=\"white\">\n                  <b-icon icon=\"search\"></b-icon\n                ></b-button>\n              </b-form>\n            </b-col>\n          </b-row>\n\n          <div v-if=\"users != 0\">\n            <hr />\n            <div>\n              <b-row>\n                <b-col> </b-col>\n                <b-col>\n                  <strong>Email</strong>\n                </b-col>\n                <b-col>\n                  <strong>Name</strong>\n                </b-col>\n             \n                <b-col class=\"text-center\">\n                  <strong>Status</strong>\n                  <b-dropdown\n                    size=\"sm\"\n                    id=\"dropdown-left\"\n                    :text=\"selectedTypeName\"\n                    class=\"ml-2\"\n                  >\n                    <b-dropdown-item @click=\"selectType(anyType)\">\n                      {{ anyType.name }}\n                    </b-dropdown-item>\n                    <b-dropdown-item\n                      v-for=\"(status, idx) in userStatus\"\n                      :key=\"idx\"\n                      @click=\"selectType(status)\"\n                    >\n                      {{ status.name }}\n                    </b-dropdown-item>\n                  </b-dropdown>\n                </b-col>\n              </b-row>\n              <hr />\n            </div>\n\n            <div v-for=\"user in secondUserList\" :key=\"user.id\">\n              <b-row>\n                <b-col>\n                  <b-img\n                    height=\"80px\"\n                    :src=\"user.profileImage\"\n                    alt=\"No Image\"\n                  />\n                </b-col>\n                <b-col>\n                  {{ user.email }}\n                </b-col>\n                <b-col>{{ user.firstName }} {{ user.lastName }}</b-col>\n                <b-col>\n                  <b-row>\n                    <b-col cols=\"7\">\n                      <b-button\n                        size=\"sm\"\n                        block\n                        v-if=\"user.id == 1\"\n                        >{{ user.userType }}</b-button\n                      >\n                      <b-dropdown\n                        size=\"sm\"\n                        block\n                        v-if=\"user.id != 1\"\n                        id=\"dropdown-left\"\n                        :text=\"user.userType\"\n                      >\n                        <b-dropdown-item\n                          v-for=\"(status, idx) in userStatus\"\n                          :key=\"idx\"\n                          @click=\"updateStatus(user, status)\"\n                        >\n                          {{ status.name }}\n                        </b-dropdown-item>\n                      </b-dropdown>\n                    </b-col>\n                    <b-col cols=\"5\">\n                      <b-button\n                        size=\"sm\"\n                        block\n                        variant=\"danger\"\n                        v-if=\"user.id != userId && user.id != 1\"\n                        @click=\"deleteAccount(user)\"\n                      >\n                        Delete\n                      </b-button>\n                      <b-button\n                        size=\"sm\"\n                        block\n                        to=\"/admin/profile\"\n                        v-if=\"user.id == userId\"\n                        variant=\"info\"\n                      >\n                        Profile\n                      </b-button>\n                    </b-col>\n                  </b-row>\n                </b-col>\n              </b-row>\n              <hr />\n            </div>\n          </div>\n          <div class=\"m-4 d-flex justify-content-center\" v-if=\"users == 0\">\n            <h3>User not found...</h3>\n          </div>\n          <b-pagination\n            v-if=\"users != 0\"\n            size=\"lg\"\n            v-model=\"currentPage\"\n            :total-rows=\"users\"\n            :per-page=\"perPage\"\n            @input=\"paginate(currentPage)\"\n          ></b-pagination>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n<script>\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport UserService from \"@/services/UserService.js\";\nimport ReviewService from \"@/services/ReviewService.js\";\nexport default {\n  name: \"AUsers\",\n  components: {\n    ATopHeader,\n  },\n  data() {\n    return {\n      anyType: {\n        name: \"All\",\n      },\n      userId: 0,\n      selectedTypeName: \"All\",\n      selectedTypeVariant: \"dark\",\n      searchUserText: \"\",\n      users: 1,\n      secondUserList: [],\n      userList: [],\n      userList2: [],\n      userStatus: [\n        {\n          name: \"Admin\",\n          priority: 1,\n          description: \"Owner of this system.\",\n        },\n        {\n          name: \"Customer\",\n          priority: 2,\n          description: \"End user of the system.\",\n        },\n      ],\n      currentPage: 1,\n      perPage: 20,\n    };\n  },\n  computed: {},\n\n  async mounted() {\n    try {\n      this.userId = this.$store.state.CurrentUser.userId;\n      this.userList = (await UserService.getUserList()).data;\n      this.userList2 = this.userList.slice();\n      if (this.userList2) {\n        this.users = this.userList2.length;\n        const start = 0;\n        this.secondUserList = this.userList2.slice(start, start + this.perPage);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n\n  methods: {\n    search() {\n      if (this.selectedTypeName != \"All\") {\n        this.userList2 = this.userList2.filter((val) => {\n          return val.userType\n            .toLowerCase()\n            .includes(this.selectedTypeName.toLowerCase());\n        });\n      }\n      this.userList2 = this.userList2.filter((val) => {\n        return (\n          val.firstName\n            .toLowerCase()\n            .includes(this.searchUserText.toLowerCase()) ||\n          val.lastName\n            .toLowerCase()\n            .includes(this.searchUserText.toLowerCase()) ||\n          val.email.toLowerCase().includes(this.searchUserText.toLowerCase())\n        );\n      });\n      this.users = this.userList2.length;\n      const start = 0;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    },\n    selectType(status) {\n      if (status.name == \"All\") {\n        this.searchUserText = \"\";\n        this.selectedTypeName = status.name;\n        this.userList2 = this.userList.slice();\n      } else {\n        this.selectedTypeName = status.name;\n        this.userList2 = this.userList.filter(\n          (obj) => obj.userType == status.name\n        );\n      }\n      this.users = this.userList2.length;\n      const start = 0;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    },\n    async updateStatus(user, status) {\n      const index = this.secondUserList.findIndex((obj) => obj.id === user.id);\n      this.secondUserList[index].userType = status.name;\n      await UserService.updateUser({\n        id: user.id,\n        userType: status.name,\n        priority: status.priority,\n      });\n    },\n    async deleteAccount(user) {\n      var reviewList = [];\n      try {\n        reviewList = (await ReviewService.getUsersReviewList(user.id)).data;\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      var i;\n      for (i in reviewList) {\n        await this.$store.dispatch(\"Review/deleteReview\", reviewList[i]);\n      }\n\n      try {\n        await UserService.deleteAccount(user.id);\n        window.location.reload();\n      } catch (error) {\n        this.$bvToast.toast(error.response.data.error, {\n          title: \"Error deleting Account\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true,\n        });\n        console.log(error.response.data.error);\n      }\n    },\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.secondUserList = this.userList2.slice(start, start + this.perPage);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}