{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport OrderItemService from \"@/services/OrderItemService.js\";\nimport OrderService from \"@/services/OrderService.js\";\nexport default {\n  name: \"OrderItems\",\n  props: {\n    orderItems: {\n      type: Array,\n      required: true\n    },\n    orderInfo: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {},\n  data() {\n    return {\n      orderStatus: this.orderInfo.status,\n      statusVariant: this.orderInfo.variant,\n      allStatus: [{\n        name: \"paid\",\n        variant: \"dark\"\n      }, {\n        name: \"preparing\",\n        variant: \"info\"\n      }, {\n        name: \"on the way\",\n        variant: \"warning\"\n      }, {\n        name: \"complete\",\n        variant: \"success\"\n      }]\n    };\n  },\n  mounted() {},\n  methods: {\n    async updateStatus(status) {\n      this.orderStatus = status.name;\n      this.statusVariant = status.variant;\n      try {\n        await OrderService.updateOrder({\n          id: this.orderInfo.id,\n          status: status.name,\n          variant: status.variant\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n    async deleteOrder() {\n      for (var i in this.orderItems) {\n        try {\n          await OrderItemService.deleteOrderItem(this.orderItems[i].id);\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n      try {\n        await OrderService.deleteOrder(this.orderInfo.id);\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      this.$router.push({\n        path: \"/admin/orders\"\n      });\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["OrderItemService","OrderService","name","props","orderItems","type","Array","required","orderInfo","Object","components","data","orderStatus","status","statusVariant","variant","allStatus","mounted","methods","updateStatus","updateOrder","id","error","console","log","response","deleteOrder","i","deleteOrderItem","$router","push","path","computed"],"sources":["src/components/Admins/Order/OrderItems.vue"],"sourcesContent":["<template>\n  <div>\n    <b-row>\n      <b-col cols=\"6\" v-for=\"orderItem in orderItems\" :key=\"orderItem.id\">\n        <b-card-group deck>\n          <b-card img-top style=\"max-width: 14rem\" class=\"mb-4\">\n            <b-card-img\n              :src=\"orderItem.Product.image1\"\n              style=\"max-width: 14rem; max-height: 14rem\"\n              alt=\"Image Not Found\"\n            />\n            <br />\n            <b-link :to=\"{ path: `/product/${orderItem.Product.id}` }\">\n              {{ orderItem.Product.title }}\n            </b-link>\n            <br />\n            <small class=\"mt-2\">\n              Price: {{ orderItem.Product.amount }}\n              {{ orderItem.Product.currency }}\n            </small>\n            <br />\n            <small class=\"mt-2\">Quantity: {{ orderItem.quantity }}</small>\n            <br />\n            <small class=\"mt-2\">\n              Cost: {{ orderItem.Product.amount * orderItem.quantity }}\n              {{ orderItem.Product.currency }}\n            </small>\n          </b-card>\n        </b-card-group>\n      </b-col>\n    </b-row>\n    <b-row>\n      <b-col>\n        <h5 class=\"font-weight-bold\">Update Status</h5>\n        <hr />\n        <b-row>\n          <b-col cols=\"5\">\n            <b-dropdown\n              id=\"dropdown-left\"\n              :text=\"orderStatus\"\n              block\n              :variant=\"statusVariant\"\n            >\n              <b-dropdown-item\n                v-for=\"(status, idx) in allStatus\"\n                :key=\"idx\"\n                @click=\"updateStatus(status)\"\n              >\n                {{ status.name }}\n              </b-dropdown-item>\n            </b-dropdown>\n          </b-col>\n        </b-row>\n        <b-row class=\"mt-4\">\n          <b-col>\n            <h5 class=\"font-weight-bold\">Delete Order</h5>\n            <hr />\n            <b-row>\n              <b-col cols=\"5\">\n                <b-button block disabled variant=\"danger\"> Delete </b-button>\n              </b-col>\n            </b-row>\n            <b-row class=\"mt-2\" v-if=\"orderStatus == 'complete'\">\n              <b-col>\n                <small>\n                  We don't allow anyone to delete any order information. If you\n                  delete this order from here this same order could be retrieve\n                  from stripe by using given checkout session id. We didn't find\n                  any way to delete order information from stripe yet. If we\n                  find a way to solve this issue we may update it. Until then\n                  please wait.\n                </small>\n              </b-col>\n            </b-row>\n          </b-col>\n        </b-row>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\nimport OrderItemService from \"@/services/OrderItemService.js\";\nimport OrderService from \"@/services/OrderService.js\";\nexport default {\n  name: \"OrderItems\",\n  props: {\n    orderItems: {\n      type: Array,\n      required: true,\n    },\n    orderInfo: {\n      type: Object,\n      required: true,\n    },\n  },\n  components: {},\n  data() {\n    return {\n      orderStatus: this.orderInfo.status,\n      statusVariant: this.orderInfo.variant,\n      allStatus: [\n        {\n          name: \"paid\",\n          variant: \"dark\",\n        },\n        {\n          name: \"preparing\",\n          variant: \"info\",\n        },\n        {\n          name: \"on the way\",\n          variant: \"warning\",\n        },\n        {\n          name: \"complete\",\n          variant: \"success\",\n        },\n      ],\n    };\n  },\n  mounted() {},\n  methods: {\n    async updateStatus(status) {\n      this.orderStatus = status.name;\n      this.statusVariant = status.variant;\n      try {\n        await OrderService.updateOrder({\n          id: this.orderInfo.id,\n          status: status.name,\n          variant: status.variant,\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n    },\n    async deleteOrder() {\n      for (var i in this.orderItems) {\n        try {\n          await OrderItemService.deleteOrderItem(this.orderItems[i].id);\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n      try {\n        await OrderService.deleteOrder(this.orderInfo.id);\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      this.$router.push({ path: \"/admin/orders\" });\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":";AAkFA,OAAAA,gBAAA;AACA,OAAAC,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;IACAC,SAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;EACA;EACAG,UAAA;EACAC,KAAA;IACA;MACAC,WAAA,OAAAJ,SAAA,CAAAK,MAAA;MACAC,aAAA,OAAAN,SAAA,CAAAO,OAAA;MACAC,SAAA,GACA;QACAd,IAAA;QACAa,OAAA;MACA,GACA;QACAb,IAAA;QACAa,OAAA;MACA,GACA;QACAb,IAAA;QACAa,OAAA;MACA,GACA;QACAb,IAAA;QACAa,OAAA;MACA;IAEA;EACA;EACAE,QAAA;EACAC,OAAA;IACA,MAAAC,aAAAN,MAAA;MACA,KAAAD,WAAA,GAAAC,MAAA,CAAAX,IAAA;MACA,KAAAY,aAAA,GAAAD,MAAA,CAAAE,OAAA;MACA;QACA,MAAAd,YAAA,CAAAmB,WAAA;UACAC,EAAA,OAAAb,SAAA,CAAAa,EAAA;UACAR,MAAA,EAAAA,MAAA,CAAAX,IAAA;UACAa,OAAA,EAAAF,MAAA,CAAAE;QACA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAd,IAAA,CAAAW,KAAA;MACA;IACA;IACA,MAAAI,YAAA;MACA,SAAAC,CAAA,SAAAvB,UAAA;QACA;UACA,MAAAJ,gBAAA,CAAA4B,eAAA,MAAAxB,UAAA,CAAAuB,CAAA,EAAAN,EAAA;QACA,SAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAd,IAAA,CAAAW,KAAA;QACA;MACA;MACA;QACA,MAAArB,YAAA,CAAAyB,WAAA,MAAAlB,SAAA,CAAAa,EAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAd,IAAA,CAAAW,KAAA;MACA;MACA,KAAAO,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EACA;EACAC,QAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}