{"ast":null,"code":"import OrderService from \"@/services/OrderService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nexport default {\n  name: \"AOrders\",\n  components: {\n    ATopHeader,\n    MyFooter\n  },\n  data() {\n    return {\n      anyType: {\n        name: \"All\",\n        variant: \"dark\"\n      },\n      selectedTypeName: \"All\",\n      selectedTypeVariant: \"dark\",\n      orders: 0,\n      secondOrderList: null,\n      orderList: null,\n      orderList2: null,\n      orderStatus: [{\n        name: \"paid\",\n        variant: \"dark\"\n      }, {\n        name: \"preparing\",\n        variant: \"info\"\n      }, {\n        name: \"on the way\",\n        variant: \"warning\"\n      }, {\n        name: \"complete\",\n        variant: \"success\"\n      }],\n      currentPage: 1,\n      perPage: 20\n    };\n  },\n  async mounted() {\n    try {\n      this.orderList = (await OrderService.getOrderList()).data;\n      this.orderList2 = this.orderList.slice();\n      if (this.orderList2) {\n        this.orders = this.orderList2.length;\n        const start = 0;\n        this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    selectType(status) {\n      if (status.name == \"All\") {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.slice();\n      } else {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.filter(obj => obj.status == status.name);\n      }\n      this.orders = this.orderList2.length;\n      const start = 0;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    },\n    async updateStatus(order, status) {\n      const index = this.secondOrderList.findIndex(obj => obj.id === order.id);\n      this.secondOrderList[index].status = status.name;\n      this.secondOrderList[index].variant = status.variant;\n      await OrderService.updateOrder({\n        id: order.id,\n        status: status.name,\n        variant: status.variant\n      });\n    },\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    }\n  }\n};","map":{"version":3,"names":["OrderService","ATopHeader","MyFooter","name","components","data","anyType","variant","selectedTypeName","selectedTypeVariant","orders","secondOrderList","orderList","orderList2","orderStatus","currentPage","perPage","mounted","getOrderList","slice","length","start","error","console","log","response","methods","selectType","status","filter","obj","updateStatus","order","index","findIndex","id","updateOrder","paginate"],"sources":["src/views/Admin/AOrders.vue"],"sourcesContent":["<template>\n  <div>\n    <ATopHeader></ATopHeader>\n    <b-container class=\"mt-4\">\n      <b-row>\n        <b-col class=\"text-center\">\n          <h3>Admins Order Page</h3>\n        </b-col>\n      </b-row>\n      <hr />\n      <div v-if=\"orders != 0\">\n        <b-row>\n          <b-col cols=\"1\" class=\"text-center\">\n            <strong>ID</strong>\n          </b-col>\n          <b-col cols=\"3\">\n            <strong>Full Name</strong>\n          </b-col>\n          <b-col cols=\"3\">\n            <strong>Email</strong>\n          </b-col>\n          <b-col cols=\"2\">\n            <strong>Order Price</strong>\n          </b-col>\n          <b-col cols=\"3\" class=\"text-center\">\n            <strong>Status</strong>\n            <b-dropdown\n              size=\"sm\"\n              id=\"dropdown-left\"\n              :text=\"selectedTypeName\"\n              :variant=\"selectedTypeVariant\"\n              class=\"ml-2\"\n            >\n              <b-dropdown-item @click=\"selectType(anyType)\">\n                {{ anyType.name }}\n              </b-dropdown-item>\n              <b-dropdown-item\n                v-for=\"(status, idx) in orderStatus\"\n                :key=\"idx\"\n                @click=\"selectType(status)\"\n              >\n                {{ status.name }}\n              </b-dropdown-item>\n            </b-dropdown>\n          </b-col>\n        </b-row>\n        <hr />\n      </div>\n      <div>\n        <div v-for=\"order in secondOrderList\" :key=\"order.id\">\n          <b-row>\n            <b-col cols=\"1\" class=\"text-center\">{{ order.id }}</b-col>\n            <b-col cols=\"3\">{{ order.name }}</b-col>\n            <b-col cols=\"3\">{{ order.email }}</b-col>\n            <b-col cols=\"2\">\n              {{ order.productCost + order.shippingCost }} {{ order.currency }}\n            </b-col>\n            <b-col cols=\"3\" class=\"text-center\">\n              <b-row>\n                <b-col cols=\"7\">\n                  <b-dropdown\n                    size=\"sm\"\n                    block\n                    id=\"dropdown-left\"\n                    :text=\"order.status\"\n                    :variant=\"order.variant\"\n                  >\n                    <b-dropdown-item\n                      v-for=\"(status, idx) in orderStatus\"\n                      :key=\"idx\"\n                      @click=\"updateStatus(order, status)\"\n                    >\n                      {{ status.name }}\n                    </b-dropdown-item>\n                  </b-dropdown>\n                </b-col>\n                <b-col cols=\"5\">\n                  <b-button\n                    size=\"sm\"\n                    block\n                    variant=\"warning\"\n                    :to=\"`/admin/order/${order.id}`\"\n                  >\n                    Details\n                  </b-button>\n                </b-col>\n              </b-row>\n            </b-col>\n          </b-row>\n          <hr />\n        </div>\n      </div>\n      <div class=\"mt-5 d-flex justify-content-center\" v-if=\"orders == 0\">\n        <h3>Order not found...</h3>\n      </div>\n      <b-pagination\n        v-if=\"orders != 0\"\n        size=\"md\"\n        v-model=\"currentPage\"\n        :total-rows=\"orders\"\n        :per-page=\"perPage\"\n        @input=\"paginate(currentPage)\"\n      ></b-pagination>\n    </b-container>\n    <MyFooter class=\"mt-5\" />\n  </div>\n</template>\n\n<script>\nimport OrderService from \"@/services/OrderService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nexport default {\n  name: \"AOrders\",\n  components: {\n    ATopHeader,\n    MyFooter,\n  },\n  data() {\n    return {\n      anyType: {\n        name: \"All\",\n        variant: \"dark\",\n      },\n      selectedTypeName: \"All\",\n      selectedTypeVariant: \"dark\",\n      orders: 0,\n      secondOrderList: null,\n      orderList: null,\n      orderList2: null,\n      orderStatus: [\n        {\n          name: \"paid\",\n          variant: \"dark\",\n        },\n        {\n          name: \"preparing\",\n          variant: \"info\",\n        },\n        {\n          name: \"on the way\",\n          variant: \"warning\",\n        },\n        {\n          name: \"complete\",\n          variant: \"success\",\n        },\n      ],\n      currentPage: 1,\n      perPage: 20,\n    };\n  },\n  async mounted() {\n    try {\n      this.orderList = (await OrderService.getOrderList()).data;\n      this.orderList2 = this.orderList.slice();\n      if (this.orderList2) {\n        this.orders = this.orderList2.length;\n        const start = 0;\n        this.secondOrderList = this.orderList2.slice(\n          start,\n          start + this.perPage\n        );\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    selectType(status) {\n      if (status.name == \"All\") {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.slice();\n      } else {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.filter(\n          (obj) => obj.status == status.name\n        );\n      }\n      this.orders = this.orderList2.length;\n      const start = 0;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    },\n    async updateStatus(order, status) {\n      const index = this.secondOrderList.findIndex(\n        (obj) => obj.id === order.id\n      );\n      this.secondOrderList[index].status = status.name;\n      this.secondOrderList[index].variant = status.variant;\n      await OrderService.updateOrder({\n        id: order.id,\n        status: status.name,\n        variant: status.variant,\n      });\n    },\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":"AA6GA,OAAAA,YAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,OAAA;QACAH,IAAA;QACAI,OAAA;MACA;MACAC,gBAAA;MACAC,mBAAA;MACAC,MAAA;MACAC,eAAA;MACAC,SAAA;MACAC,UAAA;MACAC,WAAA,GACA;QACAX,IAAA;QACAI,OAAA;MACA,GACA;QACAJ,IAAA;QACAI,OAAA;MACA,GACA;QACAJ,IAAA;QACAI,OAAA;MACA,GACA;QACAJ,IAAA;QACAI,OAAA;MACA,EACA;MACAQ,WAAA;MACAC,OAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA;MACA,KAAAL,SAAA,UAAAZ,YAAA,CAAAkB,YAAA,IAAAb,IAAA;MACA,KAAAQ,UAAA,QAAAD,SAAA,CAAAO,KAAA;MACA,SAAAN,UAAA;QACA,KAAAH,MAAA,QAAAG,UAAA,CAAAO,MAAA;QACA,MAAAC,KAAA;QACA,KAAAV,eAAA,QAAAE,UAAA,CAAAM,KAAA,CACAE,KAAA,EACAA,KAAA,QAAAL,OACA;MACA;IACA,SAAAM,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAApB,IAAA,CAAAiB,KAAA;IACA;EACA;EACAI,OAAA;IACAC,WAAAC,MAAA;MACA,IAAAA,MAAA,CAAAzB,IAAA;QACA,KAAAK,gBAAA,GAAAoB,MAAA,CAAAzB,IAAA;QACA,KAAAM,mBAAA,GAAAmB,MAAA,CAAArB,OAAA;QACA,KAAAM,UAAA,QAAAD,SAAA,CAAAO,KAAA;MACA;QACA,KAAAX,gBAAA,GAAAoB,MAAA,CAAAzB,IAAA;QACA,KAAAM,mBAAA,GAAAmB,MAAA,CAAArB,OAAA;QACA,KAAAM,UAAA,QAAAD,SAAA,CAAAiB,MAAA,CACAC,GAAA,IAAAA,GAAA,CAAAF,MAAA,IAAAA,MAAA,CAAAzB,IACA;MACA;MACA,KAAAO,MAAA,QAAAG,UAAA,CAAAO,MAAA;MACA,MAAAC,KAAA;MACA,KAAAV,eAAA,QAAAE,UAAA,CAAAM,KAAA,CAAAE,KAAA,EAAAA,KAAA,QAAAL,OAAA;IACA;IACA,MAAAe,aAAAC,KAAA,EAAAJ,MAAA;MACA,MAAAK,KAAA,QAAAtB,eAAA,CAAAuB,SAAA,CACAJ,GAAA,IAAAA,GAAA,CAAAK,EAAA,KAAAH,KAAA,CAAAG,EACA;MACA,KAAAxB,eAAA,CAAAsB,KAAA,EAAAL,MAAA,GAAAA,MAAA,CAAAzB,IAAA;MACA,KAAAQ,eAAA,CAAAsB,KAAA,EAAA1B,OAAA,GAAAqB,MAAA,CAAArB,OAAA;MACA,MAAAP,YAAA,CAAAoC,WAAA;QACAD,EAAA,EAAAH,KAAA,CAAAG,EAAA;QACAP,MAAA,EAAAA,MAAA,CAAAzB,IAAA;QACAI,OAAA,EAAAqB,MAAA,CAAArB;MACA;IACA;IACA8B,SAAAtB,WAAA;MACA,MAAAM,KAAA,IAAAN,WAAA,aAAAC,OAAA;MACA,KAAAL,eAAA,QAAAE,UAAA,CAAAM,KAAA,CAAAE,KAAA,EAAAA,KAAA,QAAAL,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}