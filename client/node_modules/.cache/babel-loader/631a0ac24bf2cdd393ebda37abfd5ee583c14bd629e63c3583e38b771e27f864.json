{"ast":null,"code":"import ProductsService from \"@/services/ProductsService.js\";\nimport ReviewService from \"@/services/ReviewService.js\";\nexport const ReviewModule = {\n  namespaced: true,\n  strict: true,\n  mutations: {\n    DO_SOMETHING() {\n      return;\n    }\n  },\n  actions: {\n    async createReview({\n      commit\n    }, {\n      rating,\n      comment,\n      productId,\n      productRating\n    }) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.createReview({\n          rating: rating,\n          comment: comment,\n          productId: productId\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (rating != 0) {\n        const newRating = (productRating.peopleRated * productRating.rating + rating) / (productRating.peopleRated + 1);\n        try {\n          await ProductsService.updateProduct({\n            id: productId,\n            rating: newRating,\n            peopleRated: productRating.peopleRated + 1\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    },\n    async updateReview({\n      commit\n    }, {\n      review,\n      newRating,\n      newComment\n    }) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.updateReview({\n          id: review.id,\n          rating: newRating,\n          comment: newComment,\n          productId: review.ProductId\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (newRating != 0 && newRating != review.rating) {\n        var newRatingProduct, peopleRated;\n        if (review.rating == 0) {\n          peopleRated = review.Product.peopleRated + 1;\n          newRatingProduct = (review.Product.peopleRated * review.Product.rating + newRating) / peopleRated;\n        } else {\n          peopleRated = review.Product.peopleRated;\n          newRatingProduct = (review.Product.peopleRated * review.Product.rating + newRating - review.rating) / peopleRated;\n        }\n        try {\n          await ProductsService.updateProduct({\n            id: review.ProductId,\n            rating: newRatingProduct,\n            peopleRated: peopleRated\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    },\n    async deleteReview({\n      commit\n    }, review) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.deleteReview(review.id);\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (review.rating != 0) {\n        var newRatingProduct;\n        if (review.Product.peopleRated == 1) {\n          newRatingProduct = 0;\n        } else {\n          newRatingProduct = (review.Product.peopleRated * review.Product.rating - review.rating) / (review.Product.peopleRated - 1);\n        }\n        try {\n          await ProductsService.updateProduct({\n            id: review.ProductId,\n            rating: newRatingProduct,\n            peopleRated: review.Product.peopleRated - 1\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductsService","ReviewService","ReviewModule","namespaced","strict","mutations","DO_SOMETHING","actions","createReview","commit","rating","comment","productId","productRating","error","console","log","response","data","newRating","peopleRated","updateProduct","id","updateReview","review","newComment","ProductId","newRatingProduct","Product","deleteReview"],"sources":["/home/perrine/Downloads/phone-shop/phone-shop/client/src/store/Review.js"],"sourcesContent":["import ProductsService from \"@/services/ProductsService.js\";\nimport ReviewService from \"@/services/ReviewService.js\";\nexport const ReviewModule = {\n  namespaced: true,\n  strict: true,\n  mutations: {\n    DO_SOMETHING() {\n      return;\n    },\n  },\n  actions: {\n    async createReview(\n      { commit },\n      { rating, comment, productId, productRating }\n    ) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.createReview({\n          rating: rating,\n          comment: comment,\n          productId: productId,\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (rating != 0) {\n        const newRating =\n          (productRating.peopleRated * productRating.rating + rating) /\n          (productRating.peopleRated + 1);\n        try {\n          await ProductsService.updateProduct({\n            id: productId,\n            rating: newRating,\n            peopleRated: productRating.peopleRated + 1,\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    },\n    async updateReview({ commit }, { review, newRating, newComment }) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.updateReview({\n          id: review.id,\n          rating: newRating,\n          comment: newComment,\n          productId: review.ProductId,\n        });\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (newRating != 0 && newRating != review.rating) {\n        var newRatingProduct, peopleRated;\n        if (review.rating == 0) {\n          peopleRated = review.Product.peopleRated + 1;\n          newRatingProduct =\n            (review.Product.peopleRated * review.Product.rating + newRating) /\n            peopleRated;\n        } else {\n          peopleRated = review.Product.peopleRated;\n          newRatingProduct =\n            (review.Product.peopleRated * review.Product.rating +\n              newRating -\n              review.rating) /\n            peopleRated;\n        }\n        try {\n          await ProductsService.updateProduct({\n            id: review.ProductId,\n            rating: newRatingProduct,\n            peopleRated: peopleRated,\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    },\n    async deleteReview({ commit }, review) {\n      commit(\"DO_SOMETHING\");\n      try {\n        await ReviewService.deleteReview(review.id);\n      } catch (error) {\n        console.log(error.response.data.error);\n      }\n      if (review.rating != 0) {\n        var newRatingProduct;\n        if (review.Product.peopleRated == 1) {\n          newRatingProduct = 0;\n        } else {\n          newRatingProduct =\n            (review.Product.peopleRated * review.Product.rating -\n              review.rating) /\n            (review.Product.peopleRated - 1);\n        }\n        try {\n          await ProductsService.updateProduct({\n            id: review.ProductId,\n            rating: newRatingProduct,\n            peopleRated: review.Product.peopleRated - 1,\n          });\n        } catch (error) {\n          console.log(error.response.data.error);\n        }\n      }\n    },\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}