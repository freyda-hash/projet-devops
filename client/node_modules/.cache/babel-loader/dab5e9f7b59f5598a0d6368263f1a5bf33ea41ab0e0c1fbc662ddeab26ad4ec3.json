{"ast":null,"code":"export const CheckoutModule = {\n  namespaced: true,\n  strict: true,\n  state: {\n    customerDetails: {\n      name: \"\",\n      email: \"\",\n      address: {\n        line1: \"\",\n        line2: \"\",\n        zipCode: \"\",\n        city: \"\",\n        division: \"\",\n        country: \"\"\n      }\n    },\n    shippingRate: 4\n  },\n  mutations: {\n    SET_CUSTOMER_NAME(state, name) {\n      state.customerDetails.name = name;\n    },\n    SET_CUSTOMER_EMAIL(state, email) {\n      state.customerDetails.email = email;\n    },\n    SET_CUSTOMER_ADDRESS_LINE1(state, line1) {\n      state.customerDetails.address.line1 = line1;\n    },\n    SET_CUSTOMER_ADDRESS_LINE2(state, line2) {\n      state.customerDetails.address.line2 = line2;\n    },\n    SET_CUSTOMER_ADDRESS_ZIP_CODE(state, zipCode) {\n      state.customerDetails.address.zipCode = zipCode;\n    },\n    SET_CUSTOMER_ADDRESS_CITY(state, city) {\n      state.customerDetails.address.city = city;\n    },\n    SET_CUSTOMER_ADDRESS_DIVISION(state, division) {\n      state.customerDetails.address.division = division;\n    },\n    SET_CUSTOMER_ADDRESS_COUNTRY(state, country) {\n      state.customerDetails.address.country = country;\n    }\n  },\n  actions: {\n    resetCustomerDetails({\n      commit\n    }) {\n      commit(\"SET_CUSTOMER_NAME\", \"\");\n      commit(\"SET_CUSTOMER_EMAIL\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_LINE1\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_LINE2\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_ZIP_CODE\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_CITY\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_DIVISION\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_COUNTRY\", \"\");\n    },\n    informationValidate({\n      state\n    }) {\n      const emailFormat = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n      if (state.customerDetails.name == \"\" || !emailFormat.test(state.customerDetails.email) || state.customerDetails.address.line1 == \"\" || state.customerDetails.address.line2 == \"\" || state.customerDetails.address.zipCode == \"\" || state.customerDetails.address.city == \"\" || state.customerDetails.address.division == \"\" || state.customerDetails.address.country == \"\") return false;else {\n        var i,\n          shippingAddress = \"\";\n        for (i in state.customerDetails.address) {\n          if (i == \"zipCode\") {\n            shippingAddress += \"<b>zip code:</b> \" + state.customerDetails.address[i] + \"<br/>\";\n            continue;\n          }\n          shippingAddress += \"<b>\" + i + \":</b> \" + state.customerDetails.address[i] + \"<br/>\";\n        }\n        const data = {\n          name: state.customerDetails.name,\n          email: state.customerDetails.email,\n          shippingAddress: shippingAddress\n        };\n        return data;\n      }\n    },\n    setCustomerName({\n      commit\n    }, name) {\n      commit(\"SET_CUSTOMER_NAME\", name);\n    },\n    setCustomerEmail({\n      commit\n    }, email) {\n      commit(\"SET_CUSTOMER_EMAIL\", email);\n    },\n    setCustomerAddressLine1({\n      commit\n    }, line1) {\n      commit(\"SET_CUSTOMER_ADDRESS_LINE1\", line1);\n    },\n    setCustomerAddressLine2({\n      commit\n    }, line2) {\n      commit(\"SET_CUSTOMER_ADDRESS_LINE2\", line2);\n    },\n    setCustomerAddressZipCode({\n      commit\n    }, zipCode) {\n      commit(\"SET_CUSTOMER_ADDRESS_ZIP_CODE\", zipCode);\n    },\n    setCustomerAddressCity({\n      commit\n    }, city) {\n      commit(\"SET_CUSTOMER_ADDRESS_CITY\", city);\n    },\n    setCustomerAddressDivision({\n      commit\n    }, division) {\n      commit(\"SET_CUSTOMER_ADDRESS_DIVISION\", division);\n    },\n    setCustomerAddressCountry({\n      commit\n    }, country) {\n      commit(\"SET_CUSTOMER_ADDRESS_COUNTRY\", country);\n    }\n  }\n};","map":{"version":3,"names":["CheckoutModule","namespaced","strict","state","customerDetails","name","email","address","line1","line2","zipCode","city","division","country","shippingRate","mutations","SET_CUSTOMER_NAME","SET_CUSTOMER_EMAIL","SET_CUSTOMER_ADDRESS_LINE1","SET_CUSTOMER_ADDRESS_LINE2","SET_CUSTOMER_ADDRESS_ZIP_CODE","SET_CUSTOMER_ADDRESS_CITY","SET_CUSTOMER_ADDRESS_DIVISION","SET_CUSTOMER_ADDRESS_COUNTRY","actions","resetCustomerDetails","commit","informationValidate","emailFormat","test","i","shippingAddress","data","setCustomerName","setCustomerEmail","setCustomerAddressLine1","setCustomerAddressLine2","setCustomerAddressZipCode","setCustomerAddressCity","setCustomerAddressDivision","setCustomerAddressCountry"],"sources":["/home/perrine/Downloads/phone-shop/phone-shop/client/src/store/Checkout.js"],"sourcesContent":["export const CheckoutModule = {\n  namespaced: true,\n  strict: true,\n  state: {\n    customerDetails: {\n      name: \"\",\n      email: \"\",\n      address: {\n        line1: \"\",\n        line2: \"\",\n        zipCode: \"\",\n        city: \"\",\n        division: \"\",\n        country: \"\",\n      },\n    },\n    shippingRate: 4,\n  },\n  mutations: {\n    SET_CUSTOMER_NAME(state, name) {\n      state.customerDetails.name = name;\n    },\n    SET_CUSTOMER_EMAIL(state, email) {\n      state.customerDetails.email = email;\n    },\n    SET_CUSTOMER_ADDRESS_LINE1(state, line1) {\n      state.customerDetails.address.line1 = line1;\n    },\n    SET_CUSTOMER_ADDRESS_LINE2(state, line2) {\n      state.customerDetails.address.line2 = line2;\n    },\n    SET_CUSTOMER_ADDRESS_ZIP_CODE(state, zipCode) {\n      state.customerDetails.address.zipCode = zipCode;\n    },\n    SET_CUSTOMER_ADDRESS_CITY(state, city) {\n      state.customerDetails.address.city = city;\n    },\n    SET_CUSTOMER_ADDRESS_DIVISION(state, division) {\n      state.customerDetails.address.division = division;\n    },\n    SET_CUSTOMER_ADDRESS_COUNTRY(state, country) {\n      state.customerDetails.address.country = country;\n    },\n  },\n  actions: {\n    resetCustomerDetails({ commit }) {\n      commit(\"SET_CUSTOMER_NAME\", \"\");\n      commit(\"SET_CUSTOMER_EMAIL\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_LINE1\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_LINE2\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_ZIP_CODE\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_CITY\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_DIVISION\", \"\");\n      commit(\"SET_CUSTOMER_ADDRESS_COUNTRY\", \"\");\n    },\n    informationValidate({ state }) {\n      const emailFormat = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n      if (\n        state.customerDetails.name == \"\" ||\n        !emailFormat.test(state.customerDetails.email) ||\n        state.customerDetails.address.line1 == \"\" ||\n        state.customerDetails.address.line2 == \"\" ||\n        state.customerDetails.address.zipCode == \"\" ||\n        state.customerDetails.address.city == \"\" ||\n        state.customerDetails.address.division == \"\" ||\n        state.customerDetails.address.country == \"\"\n      )\n        return false;\n      else {\n        var i,\n          shippingAddress = \"\";\n        for (i in state.customerDetails.address) {\n          if (i == \"zipCode\") {\n            shippingAddress +=\n              \"<b>zip code:</b> \" + state.customerDetails.address[i] + \"<br/>\";\n            continue;\n          }\n          shippingAddress +=\n            \"<b>\" + i + \":</b> \" + state.customerDetails.address[i] + \"<br/>\";\n        }\n        const data = {\n          name: state.customerDetails.name,\n          email: state.customerDetails.email,\n          shippingAddress: shippingAddress,\n        };\n        return data;\n      }\n    },\n    setCustomerName({ commit }, name) {\n      commit(\"SET_CUSTOMER_NAME\", name);\n    },\n    setCustomerEmail({ commit }, email) {\n      commit(\"SET_CUSTOMER_EMAIL\", email);\n    },\n    setCustomerAddressLine1({ commit }, line1) {\n      commit(\"SET_CUSTOMER_ADDRESS_LINE1\", line1);\n    },\n    setCustomerAddressLine2({ commit }, line2) {\n      commit(\"SET_CUSTOMER_ADDRESS_LINE2\", line2);\n    },\n    setCustomerAddressZipCode({ commit }, zipCode) {\n      commit(\"SET_CUSTOMER_ADDRESS_ZIP_CODE\", zipCode);\n    },\n    setCustomerAddressCity({ commit }, city) {\n      commit(\"SET_CUSTOMER_ADDRESS_CITY\", city);\n    },\n    setCustomerAddressDivision({ commit }, division) {\n      commit(\"SET_CUSTOMER_ADDRESS_DIVISION\", division);\n    },\n    setCustomerAddressCountry({ commit }, country) {\n      commit(\"SET_CUSTOMER_ADDRESS_COUNTRY\", country);\n    },\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}