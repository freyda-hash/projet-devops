{"ast":null,"code":"import ReviewService from \"@/services/ReviewService.js\";\nexport default {\n  name: \"UReviews\",\n  components: {},\n  data() {\n    return {\n      reviews: 0,\n      currentPage: 1,\n      perPage: 3,\n      userId: 0,\n      user: {},\n      editReviewAlert: null,\n      editReviewId: 0,\n      editRating: null,\n      editComment: \"\",\n      productId: 0,\n      reviewList: [],\n      reviewList2: []\n    };\n  },\n  async mounted() {\n    this.userId = this.$store.state.CurrentUser.userId;\n    this.user = this.$store.state.CurrentUser.user;\n    try {\n      this.reviewList = (await ReviewService.getUsersReviewList(this.userId)).data;\n      if (this.reviewList) {\n        this.reviews = this.reviewList.length;\n        const start = 0;\n        this.reviewList2 = this.reviewList.slice(start, start + this.perPage);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.reviewList2 = this.reviewList.slice(start, start + this.perPage);\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["ReviewService","name","components","data","reviews","currentPage","perPage","userId","user","editReviewAlert","editReviewId","editRating","editComment","productId","reviewList","reviewList2","mounted","$store","state","CurrentUser","getUsersReviewList","length","start","slice","error","console","log","response","methods","paginate","computed"],"sources":["src/components/User/Profile/UReviews.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"color: #001e5f\" v-if=\"reviews != 0 && reviews != 1\">\n      <h4>You made {{ reviews }} reviews on product.</h4>\n    </div>\n    <div style=\"color: #001e5f\" v-if=\"reviews == 0 || reviews == 1\">\n      <h4>You made {{ reviews }} review on product.</h4>\n    </div>\n\n    <div v-for=\"review in reviewList2\" :key=\"review.id\" class=\"mb-2\">\n      <b-card class=\"mt-3\" bg-variant=\"white\" text-variant=\"dark\">\n        <b-row>\n          <b-col cols=\"3\">\n            <b-img\n              class=\"mb-2\"\n              :src=\"review.Product.image1\"\n              height=\"140px\"\n              width=\"140px\"\n            />\n          </b-col>\n          <b-col cols=\"9\">\n            your review on&nbsp;\n            <b-link :to=\"`/product/${review.ProductId}`\">\n              {{ review.Product.title }}\n            </b-link>\n            <b-row class=\"mt-3\">\n              <b-col cols=\"7\">\n                <b-form-rating\n                  readonly\n                  :value=\"review.rating\"\n                  variant=\"primary\"\n                  class=\"mb-2\"\n                />\n              </b-col>\n            </b-row>\n            <b-row>\n              <b-col>\n                <p>{{ review.comment }}</p>\n              </b-col>\n            </b-row>\n          </b-col>\n        </b-row>\n      </b-card>\n    </div>\n    <b-pagination\n      v-if=\"reviews > perPage\"\n      size=\"lg\"\n      v-model=\"currentPage\"\n      :total-rows=\"reviews\"\n      :per-page=\"perPage\"\n      @input=\"paginate(currentPage)\"\n    ></b-pagination>\n  </div>\n</template>\n\n<script>\nimport ReviewService from \"@/services/ReviewService.js\";\nexport default {\n  name: \"UReviews\",\n  components: {},\n  data() {\n    return {\n      reviews: 0,\n      currentPage: 1,\n      perPage: 3,\n      userId: 0,\n      user: {},\n      editReviewAlert: null,\n      editReviewId: 0,\n      editRating: null,\n      editComment: \"\",\n      productId: 0,\n      reviewList: [],\n      reviewList2: [],\n    };\n  },\n  async mounted() {\n    this.userId = this.$store.state.CurrentUser.userId;\n    this.user = this.$store.state.CurrentUser.user;\n    try {\n      this.reviewList = (\n        await ReviewService.getUsersReviewList(this.userId)\n      ).data;\n      if (this.reviewList) {\n        this.reviews = this.reviewList.length;\n        const start = 0;\n        this.reviewList2 = this.reviewList.slice(start, start + this.perPage);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n    }\n  },\n  methods: {\n    paginate(currentPage) {\n      const start = (currentPage - 1) * this.perPage;\n      this.reviewList2 = this.reviewList.slice(start, start + this.perPage);\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"mappings":"AAwDA,OAAAA,aAAA;AACA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,WAAA;MACAC,OAAA;MACAC,MAAA;MACAC,IAAA;MACAC,eAAA;MACAC,YAAA;MACAC,UAAA;MACAC,WAAA;MACAC,SAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAT,MAAA,QAAAU,MAAA,CAAAC,KAAA,CAAAC,WAAA,CAAAZ,MAAA;IACA,KAAAC,IAAA,QAAAS,MAAA,CAAAC,KAAA,CAAAC,WAAA,CAAAX,IAAA;IACA;MACA,KAAAM,UAAA,IACA,MAAAd,aAAA,CAAAoB,kBAAA,MAAAb,MAAA,GACAJ,IAAA;MACA,SAAAW,UAAA;QACA,KAAAV,OAAA,QAAAU,UAAA,CAAAO,MAAA;QACA,MAAAC,KAAA;QACA,KAAAP,WAAA,QAAAD,UAAA,CAAAS,KAAA,CAAAD,KAAA,EAAAA,KAAA,QAAAhB,OAAA;MACA;IACA,SAAAkB,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA,CAAAG,QAAA,CAAAxB,IAAA,CAAAqB,KAAA;IACA;EACA;EACAI,OAAA;IACAC,SAAAxB,WAAA;MACA,MAAAiB,KAAA,IAAAjB,WAAA,aAAAC,OAAA;MACA,KAAAS,WAAA,QAAAD,UAAA,CAAAS,KAAA,CAAAD,KAAA,EAAAA,KAAA,QAAAhB,OAAA;IACA;EACA;EACAwB,QAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}