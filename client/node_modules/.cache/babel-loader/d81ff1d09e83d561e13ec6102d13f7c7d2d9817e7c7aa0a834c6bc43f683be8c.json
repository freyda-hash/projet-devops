{"ast":null,"code":"export default {\n  name: \"AddToCart\",\n  props: {\n    addButtonTitle: {\n      default: \"\",\n      type: String\n    },\n    addedButtonTitle: {\n      default: \"\",\n      type: String\n    },\n    buttonType: String,\n    productId: Number,\n    currency: String,\n    rating: Number,\n    image: String,\n    title: String,\n    amount: Number\n  },\n  computed: {},\n  data() {\n    return {\n      validCartItem: -1\n    };\n  },\n  async mounted() {\n    this.validCartItem = await this.$store.dispatch(\"Cart/getCartItem\", this.productId);\n  },\n  methods: {\n    async addToCart() {\n      const cartItem = {\n        productId: this.productId,\n        title: this.title,\n        image: this.image,\n        rating: this.rating,\n        currency: this.currency,\n        amount: this.amount,\n        quantity: 1\n      };\n      this.validCartItem = await this.$store.dispatch(\"Cart/addToCart\", cartItem);\n      if (this.validCartItem != -1) {\n        this.$bvToast.toast(\"Product added to cart\", {\n          title: \"Cart\",\n          variant: \"primary\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true\n        });\n      }\n    },\n    async removeCartItem() {\n      this.validCartItem = await this.$store.dispatch(\"Cart/removeCartItem\", this.productId);\n      if (this.validCartItem == -1) {\n        this.$bvToast.toast(\"Product removed from cart\", {\n          title: \"Cart\",\n          variant: \"primary\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","addButtonTitle","default","type","String","addedButtonTitle","buttonType","productId","Number","currency","rating","image","title","amount","computed","data","validCartItem","mounted","$store","dispatch","methods","addToCart","cartItem","quantity","$bvToast","toast","variant","toaster","noCloseButton","solid","removeCartItem"],"sources":["src/components/MaintainProduct/AddToCart.vue"],"sourcesContent":["<template>\n  <div>\n    <b-dropdown\n      id=\"cart-dd\"\n      v-if=\"validCartItem != -1\"\n      :size=\"buttonType\"\n      variant=\"info\"\n    >\n      <template #button-content>\n        <b-icon scale=\"1.2\" icon=\"cart-check-fill\" />\n        {{ addedButtonTitle }}\n      </template>\n      <b-dropdown-item @click=\"removeCartItem\">\n        Remove from Cart\n      </b-dropdown-item>\n    </b-dropdown>\n    <b-button\n      v-if=\"validCartItem == -1\"\n      :size=\"buttonType\"\n      variant=\"outline-info\"\n      @click=\"addToCart\"\n    >\n      <b-icon scale=\"1.2\" icon=\"cart-plus-fill\" />\n      {{ addButtonTitle }}\n    </b-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AddToCart\",\n  props: {\n    addButtonTitle: {\n      default: \"\",\n      type: String,\n    },\n    addedButtonTitle: {\n      default: \"\",\n      type: String,\n    },\n    buttonType: String,\n    productId: Number,\n    currency: String,\n    rating: Number,\n    image: String,\n    title: String,\n    amount: Number,\n  },\n  computed: {},\n  data() {\n    return {\n      validCartItem: -1,\n    };\n  },\n  async mounted() {\n    this.validCartItem = await this.$store.dispatch(\n      \"Cart/getCartItem\",\n      this.productId\n    );\n  },\n  methods: {\n    async addToCart() {\n      const cartItem = {\n        productId: this.productId,\n        title: this.title,\n        image: this.image,\n        rating: this.rating,\n        currency: this.currency,\n        amount: this.amount,\n        quantity: 1,\n      };\n      this.validCartItem = await this.$store.dispatch(\n        \"Cart/addToCart\",\n        cartItem\n      );\n\n      if (this.validCartItem != -1) {\n        this.$bvToast.toast(\"Product added to cart\", {\n          title: \"Cart\",\n          variant: \"primary\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true,\n        });\n      }\n    },\n    async removeCartItem() {\n      this.validCartItem = await this.$store.dispatch(\n        \"Cart/removeCartItem\",\n        this.productId\n      );\n      if (this.validCartItem == -1) {\n        this.$bvToast.toast(\"Product removed from cart\", {\n          title: \"Cart\",\n          variant: \"primary\",\n          toaster: \"b-toaster-top-center\",\n          noCloseButton: false,\n          solid: true,\n        });\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"],"mappings":"AA6BA;EACAA,IAAA;EACAC,KAAA;IACAC,cAAA;MACAC,OAAA;MACAC,IAAA,EAAAC;IACA;IACAC,gBAAA;MACAH,OAAA;MACAC,IAAA,EAAAC;IACA;IACAE,UAAA,EAAAF,MAAA;IACAG,SAAA,EAAAC,MAAA;IACAC,QAAA,EAAAL,MAAA;IACAM,MAAA,EAAAF,MAAA;IACAG,KAAA,EAAAP,MAAA;IACAQ,KAAA,EAAAR,MAAA;IACAS,MAAA,EAAAL;EACA;EACAM,QAAA;EACAC,KAAA;IACA;MACAC,aAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAD,aAAA,cAAAE,MAAA,CAAAC,QAAA,CACA,oBACA,KAAAZ,SACA;EACA;EACAa,OAAA;IACA,MAAAC,UAAA;MACA,MAAAC,QAAA;QACAf,SAAA,OAAAA,SAAA;QACAK,KAAA,OAAAA,KAAA;QACAD,KAAA,OAAAA,KAAA;QACAD,MAAA,OAAAA,MAAA;QACAD,QAAA,OAAAA,QAAA;QACAI,MAAA,OAAAA,MAAA;QACAU,QAAA;MACA;MACA,KAAAP,aAAA,cAAAE,MAAA,CAAAC,QAAA,CACA,kBACAG,QACA;MAEA,SAAAN,aAAA;QACA,KAAAQ,QAAA,CAAAC,KAAA;UACAb,KAAA;UACAc,OAAA;UACAC,OAAA;UACAC,aAAA;UACAC,KAAA;QACA;MACA;IACA;IACA,MAAAC,eAAA;MACA,KAAAd,aAAA,cAAAE,MAAA,CAAAC,QAAA,CACA,uBACA,KAAAZ,SACA;MACA,SAAAS,aAAA;QACA,KAAAQ,QAAA,CAAAC,KAAA;UACAb,KAAA;UACAc,OAAA;UACAC,OAAA;UACAC,aAAA;UACAC,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}